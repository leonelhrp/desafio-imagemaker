{"ast":null,"code":"import _slicedToArray from \"/Users/leonelhrp/Sites/desafio-imagemaker-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"/Users/leonelhrp/Sites/desafio-imagemaker-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/leonelhrp/Sites/desafio-imagemaker-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/leonelhrp/Sites/desafio-imagemaker-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/leonelhrp/Sites/desafio-imagemaker-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/leonelhrp/Sites/desafio-imagemaker-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/leonelhrp/Sites/desafio-imagemaker-client/src/components/CharactersList.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport './styles/CharactersList.css';\nimport Avatar from './Avatar';\n\nvar CharactersListItem =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(CharactersListItem, _React$Component);\n\n  function CharactersListItem() {\n    _classCallCheck(this, CharactersListItem);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(CharactersListItem).apply(this, arguments));\n  }\n\n  _createClass(CharactersListItem, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"CharactersListItem\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 10\n        },\n        __self: this\n      }, React.createElement(Avatar, {\n        className: \"CharactersListItem__avatar\",\n        image: this.props.character.image,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, this.props.character.name), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }), \"@\", this.props.character.twitter, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }), this.props.character.jobTitle));\n    }\n  }]);\n\n  return CharactersListItem;\n}(React.Component);\n\nfunction useSearchCharacters(characters) {\n  var _React$useState = React.useState(''),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      query = _React$useState2[0],\n      setQuery = _React$useState2[1];\n\n  var _React$useState3 = React.useState(characters),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      filteredCharacters = _React$useState4[0],\n      setFilteredCharacters = _React$useState4[1];\n\n  React.useMemo(function () {\n    var result = characters.filter(function (character) {\n      return \"\".concat(character.firstName, \" \").concat(character.lastName).toLowerCase().includes(query.toLowerCase());\n    });\n    setFilteredCharacters(result);\n  }, [characters, query]);\n  return {\n    query: query,\n    setQuery: setQuery,\n    filteredCharacters: filteredCharacters\n  };\n}\n\nfunction CharactersList(props) {\n  var characters = props.characters;\n\n  var _useSearchCharacters = useSearchCharacters(characters),\n      query = _useSearchCharacters.query,\n      setQuery = _useSearchCharacters.setQuery,\n      filteredCharacters = _useSearchCharacters.filteredCharacters;\n\n  if (filteredCharacters.length === 0) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"Filter Characters\"), React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      value: query,\n      onChange: function onChange(e) {\n        setQuery(e.target.value);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    })), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"No characters were found\"), React.createElement(Link, {\n      className: \"btn btn-primary\",\n      to: \"/characters/new\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"Create new character\"));\n  }\n\n  return React.createElement(\"div\", {\n    className: \"CharactersList\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, \"Filter Characters\"), React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    value: query,\n    onChange: function onChange(e) {\n      setQuery(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  })), React.createElement(\"ul\", {\n    className: \"list-unstyled\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, filteredCharacters.map(function (character) {\n    return React.createElement(\"li\", {\n      key: character.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(Link, {\n      className: \"text-reset text-decoration-none\",\n      to: \"/characters/\".concat(character.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(CharactersListItem, {\n      character: character,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    })));\n  })));\n}\n\nexport default CharactersList;","map":{"version":3,"sources":["/Users/leonelhrp/Sites/desafio-imagemaker-client/src/components/CharactersList.js"],"names":["React","Link","Avatar","CharactersListItem","props","character","image","name","twitter","jobTitle","Component","useSearchCharacters","characters","useState","query","setQuery","filteredCharacters","setFilteredCharacters","useMemo","result","filter","firstName","lastName","toLowerCase","includes","CharactersList","length","e","target","value","map","id"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './styles/CharactersList.css';\nimport Avatar from './Avatar';\n\nclass CharactersListItem extends React.Component {\n  render() {\n    return (\n      <div className=\"CharactersListItem\">\n        <Avatar\n          className=\"CharactersListItem__avatar\"\n          image={this.props.character.image}\n        />\n\n        <div>\n          <strong>\n            {this.props.character.name}\n          </strong>\n          <br />@{this.props.character.twitter}\n          <br />\n          {this.props.character.jobTitle}\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction useSearchCharacters(characters) {\n  const [query, setQuery] = React.useState('');\n  const [filteredCharacters, setFilteredCharacters] = React.useState(characters);\n\n  React.useMemo(() => {\n    const result = characters.filter(character => {\n      return `${character.firstName} ${character.lastName}`\n        .toLowerCase()\n        .includes(query.toLowerCase());\n    });\n\n    setFilteredCharacters(result);\n  }, [characters, query]);\n\n  return { query, setQuery, filteredCharacters };\n}\n\nfunction CharactersList(props) {\n  const characters = props.characters;\n\n  const { query, setQuery, filteredCharacters } = useSearchCharacters(characters);\n\n  if (filteredCharacters.length === 0) {\n    return (\n      <div>\n        <div className=\"form-group\">\n          <label>Filter Characters</label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            value={query}\n            onChange={e => {\n              setQuery(e.target.value);\n            }}\n          />\n        </div>\n\n        <h3>No characters were found</h3>\n        <Link className=\"btn btn-primary\" to=\"/characters/new\">\n          Create new character\n        </Link>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"CharactersList\">\n      <div className=\"form-group\">\n        <label>Filter Characters</label>\n        <input\n          type=\"text\"\n          className=\"form-control\"\n          value={query}\n          onChange={e => {\n            setQuery(e.target.value);\n          }}\n        />\n      </div>\n\n      <ul className=\"list-unstyled\">\n        {filteredCharacters.map(character => {\n          return (\n            <li key={character.id}>\n              <Link\n                className=\"text-reset text-decoration-none\"\n                to={`/characters/${character.id}`}\n              >\n                <CharactersListItem character={character} />\n              </Link>\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n}\n\nexport default CharactersList;\n"]},"metadata":{},"sourceType":"module"}